<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">


    <!--
    This will automatically locate any and all property files you have
    within your classpath, provided they fall under the META-INF/spring
    directory. The located property files are parsed and their values can
    then be used within application context files in the form of
    ${propertyKey}.
    -->
    <context:property-placeholder
            ignore-resource-not-found="true"
            location="classpath*:*.properties"/>


    <!-- post-processors -->
    <context:annotation-config/>
    <context:spring-configured/>
    <context:component-scan base-package="com.xcafe.mediacity">
        <!-- because @Controller classes will be instantiated by a web tier application context -->
        <context:exclude-filter expression="org.springframework.stereotype.Controller"
                                type="annotation"/>
    </context:component-scan>

    <bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <tx:annotation-driven/>

    <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="entityManagerFactory">
        <property name="persistenceUnitName" value="mediacity"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"></property>
        <property name="jpaDialect" value="${jpa.dialect}"/>
        <property name="packagesToScan" value="${jpa.entities.package}"/>
    </bean>

    <bean class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close" id="dataSource">
        <property name="driverClassName" value="${jpa.driver.classname}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
        <!-- The indication of whether objects will be validated before being borrowed from the pool. -->
        <property name="testOnBorrow" value="true"/>
        <!-- The indication of whether objects will be validated before being returned to the pool. -->
        <property name="testOnReturn" value="true"/>
        <!-- The indication of whether objects will be validated by the idle object evictor -->
        <property name="testWhileIdle" value="true"/>
        <!-- The number of milliseconds to sleep between runs of the idle object evictor thread. -->
        <property name="timeBetweenEvictionRunsMillis" value="1800000"/>
        <!-- The number of objects to examine during each run of the idle object evictor thread -->
        <property name="numTestsPerEvictionRun" value="3"/>
        <!-- The minimum amount of time an object may sit idle in the pool before it is eligable for eviction -->
        <property name="minEvictableIdleTimeMillis" value="1800000"/>
        <!-- The query that will be used to validate connections from this pool before returning them to the caller -->
        <property name="validationQuery" value="SELECT 1;"/>
    </bean>

</beans>
